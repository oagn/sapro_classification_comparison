data:
  # --- Directories and Paths ---
  output_dir: '/scratch/c.c1767198/output/sapro_classification_comparison/final_retry_both_user_grouped'
  train_dir: '/scratch/c.c1767198/data/fishDatabase/final_splits/both_nfold/train'
  metadata_path: "/scratch/c.c1767198/data/fishDatabase/full_combined_metadata_scientific_nodupes.csv"
  weights_path: null  # Optional path to pre-trained weights (e.g., .h5 file)

  # --- Dataset Parameters ---
  batch_size: 32
  augmentation_magnitude: 0.6  # Controls RandAugment strength (0=off)
  num_classes: 2
  class_names: ['healthy','sapro'] # Must match folder names in train_dir

  # --- Grouping and Stratification (for cross-validation) ---
  group_column: "user" # Column in metadata for GroupKFold
  stratify_columns: 
    - "source"
    - "scientific_name_fixed" # Columns in metadata for stratification

models:
  # --- Model-Specific Configurations ---
  # img_size: Input image dimensions (height, width)
  # num_dense_layers: Number of units in the added dense layer before classification
  # unfreeze_layers: Number of layers to unfreeze from the end during fine-tuning
  MobileNetV3S:
    img_size: 224
    num_dense_layers: 128
    unfreeze_layers: 52
  EfficientNetV2B0:
    img_size: 224
    num_dense_layers: 256
    unfreeze_layers: 198
  EfficientNetV2S:
    img_size: 300
    num_dense_layers: 512
    unfreeze_layers: 363
  ResNet50:
    img_size: 224
    num_dense_layers: 128
    unfreeze_layers: 98

training:
  # --- Epochs ---
  initial_epochs: 20      # Epochs for training with frozen base model
  fine_tuning_epochs: 40  # Epochs for training after unfreezing layers

  # --- Learning Rates ---
  learning_rate: 0.001    # Initial learning rate (frozen phase)
  fine_tuning_lr: 0.00001 # Learning rate for fine-tuning (unfrozen phase)

  # --- Loss and Callbacks ---
  focal_loss_gamma: 2.0   # Gamma parameter for FocalLoss
  early_stopping_patience: 10 # Patience for EarlyStopping callback

  # --- Cross-Validation and Sampling ---
  use_groups: true      # Use StratifiedGroupKFold based on `group_column` if true, else StratifiedKFold
  n_folds: 5            # Number of cross-validation folds
  use_oversampling: true # Enable simple random oversampling of minority class in training folds
  sampling_strategy: "match_majority"  # Oversampling method ('threshold', 'match_majority', 'progressive')
  threshold_ratio: 0.5  # Ratio for 'threshold' strategy (minority samples = ratio * majority samples)